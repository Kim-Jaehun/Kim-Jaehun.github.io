---
layout: post
title:  "RNN basic"
date:   2018-04-17 13:43:59
author: kim-jaehun
categories:
  -Deep Learning
tags: RNN
use_math: true
---
## RNN basic

### hihell -> ihello(학습)

![rnn_basic](https://drive.google.com/uc?id=1a1P_brgJaNfsrvpO7HdL01xAlvfmK-7M)


{% highlight python3 %}
idx2char = ['h', 'i', 'e', 'l', 'o']
x_data = [[0, 1, 0, 2, 3, 3]]   # hihell
x_one_hot = [[[1, 0, 0, 0, 0],   # h 0
              [0, 1, 0, 0, 0],   # i 1
              [1, 0, 0, 0, 0],   # h 0
              [0, 0, 1, 0, 0],   # e 2
              [0, 0, 0, 1, 0],   # l 3
              [0, 0, 0, 1, 0]]]  # l 3

y_data = [[1, 0, 2, 3, 3, 4]]    # ihello

num_classes = 5
input_dim = 5  # one-hot size
hidden_size = 5  # output from the LSTM. 5 to directly predict one-hot
batch_size = 1   # one sentence
sequence_length = 6  # |ihello| == 6
learning_rate = 0.1

X = tf.placeholder(tf.float32, [None, sequence_length, input_dim])  
Y = tf.placeholder(tf.int32, [None, sequence_length])  # Y label

cell = tf.contrib.rnn.BasicLSTMCell(num_units=hidden_size, state_is_tuple=True)
initial_state = cell.zero_state(batch_size, tf.float32)
rnn_outputs, states = tf.nn.dynamic_rnn(cell, X, initial_state=initial_state, dtype=tf.float32)

X_for_fc = tf.reshape(rnn_outputs, [-1, hidden_size])
fully_outputs = tf.contrib.layers.fully_connected(inputs=X_for_fc, num_outputs=num_classes, activation_fn=None)
reshaped_fully_outputs = tf.reshape(fully_outputs, [batch_size, sequence_length, num_classes])

weights = tf.ones([batch_size, sequence_length])
sequence_loss = tf.contrib.seq2seq.sequence_loss(logits=reshaped_fully_outputs, targets=Y, weights=weights)
loss = tf.reduce_mean(sequence_loss)
train = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss)

prediction = tf.argmax(reshaped_fully_outputs, axis=2)

with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    for i in range(50):
        a, l, rnn_outputs, X_for_fc, fully_outputs, reshaped_fully_outputs = \
            sess.run([train, loss, rnn_outputs, X_for_fc, fully_outputs, reshaped_fully_outputs], feed_dict={X: x_one_hot, Y: y_data})
        result = sess.run(prediction, feed_dict={X: x_one_hot})
        result_str = [idx2char[c] for c in np.squeeze(result)]

{% endhighlight %}



학습 중 변수의 값


{% highlight python3 %}
"""
******rnn_outputs********
[[[-0.07593412 -0.03948177 -0.03467402 -0.01073335  0.04096682]
  [ 0.02921166 -0.01757501  0.02007771  0.05754526  0.08823647]
  [-0.0550637  -0.04743472 -0.02438005  0.02033746  0.10902117]
  [-0.08369324  0.02672316  0.04143078  0.00924327  0.11861573]
  [-0.20408423  0.11086091 -0.02949018 -0.02246824  0.06348947]
  [-0.25665334  0.16950813 -0.07855016 -0.03852988  0.03731249]]]
******X_for_fc********
[[-0.07593412 -0.03948177 -0.03467402 -0.01073335  0.04096682]
 [ 0.02921166 -0.01757501  0.02007771  0.05754526  0.08823647]
 [-0.0550637  -0.04743472 -0.02438005  0.02033746  0.10902117]
 [-0.08369324  0.02672316  0.04143078  0.00924327  0.11861573]
 [-0.20408423  0.11086091 -0.02949018 -0.02246824  0.06348947]
 [-0.25665334  0.16950813 -0.07855016 -0.03852988  0.03731249]]
******fully_outputs********
[[-0.00942202 -0.03429641 -0.00977091 -0.09475064 -0.01159189]
 [-0.08005951 -0.02565439  0.06636162 -0.01224536 -0.04141693]
 [-0.06375675 -0.06133176  0.04567173 -0.10892199 -0.04716616]
 [-0.03175703 -0.09449901  0.0303351  -0.04008165 -0.0188891 ]
 [ 0.08821519 -0.08070618 -0.01941308 -0.0724203   0.09579138]
 [ 0.15475363 -0.07216156 -0.02646641 -0.08797184  0.15843473]]
******reshaped_fully_outputs********
[[[-0.00942202 -0.03429641 -0.00977091 -0.09475064 -0.01159189]
  [-0.08005951 -0.02565439  0.06636162 -0.01224536 -0.04141693]
  [-0.06375675 -0.06133176  0.04567173 -0.10892199 -0.04716616]
  [-0.03175703 -0.09449901  0.0303351  -0.04008165 -0.0188891 ]
  [ 0.08821519 -0.08070618 -0.01941308 -0.0724203   0.09579138]
  [ 0.15475363 -0.07216156 -0.02646641 -0.08797184  0.15843473]]]
 #####################################
 #####################################
prediction:  [[3 3 3 3 3 3]] true Y:  [[1, 0, 2, 3, 3, 4]]
 #####################################

 ....


 ******rnn_outputs********
[[[ 0.6936469  -0.6828825  -0.25852802 -0.37199214 -0.51500046]
  [ 0.00171623 -0.01226743 -0.2907056  -0.9526798   0.35096732]
  [ 0.97854537  0.21038122  0.42238036 -0.92857367  0.877445  ]
  [-0.68430823  0.83777875  0.90041256 -0.9991243   0.97904444]
  [-0.9544029   0.9763863   0.88777435 -0.4765882   0.6158407 ]
  [-0.9933669   0.9967299   0.35821992  0.7213132  -0.70217645]]]
******X_for_fc********
[[ 0.6936469  -0.6828825  -0.25852802 -0.37199214 -0.51500046]
 [ 0.00171623 -0.01226743 -0.2907056  -0.9526798   0.35096732]
 [ 0.97854537  0.21038122  0.42238036 -0.92857367  0.877445  ]
 [-0.68430823  0.83777875  0.90041256 -0.9991243   0.97904444]
 [-0.9544029   0.9763863   0.88777435 -0.4765882   0.6158407 ]
 [-0.9933669   0.9967299   0.35821992  0.7213132  -0.70217645]]
******fully_outputs********
[[  2.867949     8.340895     0.5751319   -5.140276    -4.3552284 ]
 [  5.457345     0.46108055   0.62855506  -1.049196    -5.4371557 ]
 [  2.5173297   -1.3079305    7.1358604    0.8114258   -8.477658  ]
 [  1.9090335  -10.747182    -0.43213034   6.762928    -2.8130848 ]
 [  0.1966666  -10.126477    -3.6692774    6.8555765    0.94623137]
 [ -2.6813235   -2.7678301  -10.228937     3.3666024    8.4493885 ]]
******reshaped_fully_outputs********
[[[  2.867949     8.340895     0.5751319   -5.140276    -4.3552284 ]
  [  5.457345     0.46108055   0.62855506  -1.049196    -5.4371557 ]
  [  2.5173297   -1.3079305    7.1358604    0.8114258   -8.477658  ]
  [  1.9090335  -10.747182    -0.43213034   6.762928    -2.8130848 ]
  [  0.1966666  -10.126477    -3.6692774    6.8555765    0.94623137]
  [ -2.6813235   -2.7678301  -10.228937     3.3666024    8.4493885 ]]]
 #####################################
 #####################################
prediction:  [[1 0 2 3 3 4]] true Y:  [[1, 0, 2, 3, 3, 4]]
 #####################################
"""


reshape 함수에 사용된 -1은 나누어 떨어지는 숫자를 자동으로 적용하겠다는 뜻이다. 12개의 요소가 있을 때, [3,-1]이라는 것은 [3,4]와 같고, [2,2,-1]이라는 것은 [2,2,3]과 같다


{% endhighlight %}
