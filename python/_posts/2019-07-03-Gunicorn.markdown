---
layout: post
title:  "Gunicorn"
date:   2019-07-23 08:43:59
author: kim-jaehun
categories: [python]
tags: [python]
sitemap :
  changefreq : daily
  priority : 1.0
---


## Gunicorn

`Gunicorn`은 pre-fork worker 모델이다. pre-fork worker 모델은 마스터 프로세스가 워커 프로세스의 집합을 관리한다. 모든 request와 response는 워커 프로세스만 다뤄진다.

워커 프로세스는 `Sync Worker`, `Async Worker`, `Tornado Workers`, `AsyncIO Workers`로 구분된다. 하지만 여기서는 Sync, Async 만을 다룹니다.


### Sync Worker
Sync Worker는 한 번에 하나의 요청을 처리합니다. 각 worker는 메모리 공유하지 않습니다. 각 워커마다 쓰레드를 생성할 수 있습니다. 생성된 쓰레드는 메모리를 공유합니다.


공식 문서에서 권장하는 워커와 스레드의 개수는 2 * CPU + 1

```
$ gunicorn --worker=9 --threads=9 app:app
```



### Async Worker
Async Worker는 `Greenlets`에 기반을 두고 있습니다.
Greenlets는 파이썬을 위해 implementation of cooperative multi-threading 이다.
Gevent 은 `coroutine`으로 구현 된 `pseudo-thread`"를 사용하여 파이썬에서 동시성을 가능하게 한다.

--worker-connections 는 워커당 커넥션 수(여기서는 커넥션 = 9000 가능)
```
$ gunicorn --worker-class=gevent --worker-connections=1000 --worker=9 --threads=9 app:app
```



<br><br>
#### 참고문헌
* http://docs.gunicorn.org/en/stable/design.html
* https://medium.com/building-the-system/gunicorn-3-means-of-concurrency-efbb547674b7
